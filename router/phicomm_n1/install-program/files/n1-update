#!/bin/sh

die() {
    echo -e "\033[31mError:\033[0m $1" && exit 1
}

emmc=$(lsblk | grep -oE 'mmcblk[0-9]' | sort | uniq)
dev_emmc="/dev/$emmc"

echo "emmc: $dev_emmc"
echo ""

if [ $(blkid | grep -E 'BOOT_EMMC|ROOT_EMMC|DATA' | wc -l) != 3 ]; then
    die "you have never installed a OS to emmc, please boot with usb and run n1-install to install at first!"
fi

image="/tmp/upgrade/*.img"
[ -f $image ] || die "no upgrade image in /tmp/upgrade!!"

echo "start upgrade form $(ls /tmp/upgrade | grep '.img$')..."

loop=$(losetup -P -f --show $image)
[ $loop ] || die "create loop device failed!!"

mnt_loop="/mnt/$(echo $loop | grep -oE 'loop[0-9]+')"
[ -d ${mnt_loop}p2 ] || {
    mkdir -p ${mnt_loop}p1 ${mnt_loop}p2
    mount -t vfat ${loop}p1 ${mnt_loop}p1
    mount -t ext4 ${loop}p2 ${mnt_loop}p2
}

uuid=$(blkid ${loop}p2 | awk '{ print $3 }' | cut -d '"' -f 2)
uenv="${mnt_loop}p1/uEnv.txt"

if [ $uuid ]; then
    sed -i "s/LABEL=ROOTFS/UUID=$uuid/" $uenv
else
    sed -i 's/ROOTFS/ROOT_EMMC/' $uenv
fi

echo && read -p "do you want to save configuration [Y/n]? " yn
case $yn in
n | N) yn='n' ;;
*) yn='y' ;;
esac

[ "$yn" = "y" ] && {
    backup="/opt/backup-OpenWrt-$(date "+%Y-%m-%d").tar.gz"
    sysupgrade -b $backup
    tar -xzf $backup -C ${mnt_loop}p2
}

fstab="${mnt_loop}p2/etc/config/fstab"
sed -i "s/'BOOT'/'BOOT_EMMC'/" $fstab
if [ $uuid ]; then
    sed -i -e '/ROOTFS/ s/label/uuid/' $fstab
    sed -i "s/ROOTFS/$uuid/" $fstab
else
    sed -i 's/ROOTFS/ROOT_EMMC/' $fstab
fi

cat >${mnt_loop}p2/etc/init.d/resizefs <<-EOF
#!/bin/sh /etc/rc.common

START=99

boot() {
    /usr/sbin/resize2fs /dev/mmcblk1p2
    # mount -o rw,remount /
}
EOF

chmod +x ${mnt_loop}p2/etc/init.d/resizefs
(
    cd ${mnt_loop}p2/etc/rc.d
    ln -s ../init.d/resizefs S99resizefs
)

rm -f ${mnt_loop}p2/usr/bin/n1-install
tune2fs -L "ROOT_EMMC" ${loop}p2 >/dev/null

# umount -f ${loop}p*
# losetup -d $loop

echo -e "
###############################
          upgrading...

    !!! \033[31mdo not poweroff\033[0m !!!
###############################
"

(
    cd ${mnt_loop}p1
    tar -czf boot.tar.gz *
)

echo "upgrading boot..."
grep -w '/boot' /proc/mounts | grep $dev_emmc || {
    umount -f /boot 2>/dev/null
    mount -t vfat ${dev_emmc}p1 /boot
}
rm -rf /boot/*
# cp -r ${mnt_loop}p1/* /boot && sync
boottgz="${mnt_loop}p1/boot.tar.gz"
pv -rpt $boottgz | (
    cd /boot
    tar -xzf -
)
echo ""

echo "upgrading rootfs..."
echo '1' >/proc/sys/kernel/sysrq
echo 'u' >/proc/sysrq-trigger || umount /
pv -rpt ${loop}p2 | dd of=${dev_emmc}p2 conv=sync 2>/dev/null
echo ""

echo "done, will reboot your device now!"
echo 'b' >/proc/sysrq-trigger
