#============================================================================================================================
# https://github.com/ophub/op
# Description: Automatically Build OpenWrt for s905x3
# Function: Workflows for Build s905x3
# Cron: min (0 - 59) / hour (0 - 23) / day of month (1 - 31) / month (1 - 12) / day of week (0 - 6)(Sunday - Saturday)
# ${{ env.MAKE_FIRMWARE }}: all s905x3 hk1
#============================================================================================================================

name: Build OpenWrt for s905x3

on:
  repository_dispatch:
  release:
    types: published
  push:
    branches:
      - main
    paths:
      - '.github/workflows/build-openwrt-s905x3-hk1.yml'
      - 'router/phicomm_n1/build_kernel/make_s905x3_hk1.sh'
  schedule:
    - cron: '0 20 * * 0'
  #watch:
    #types: started

env:
  OPENWRT_PATH: router/phicomm_n1/build_kernel
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  UPLOAD_COWTRANSFER: false
  UPLOAD_WETRANSFER: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-18.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Check space usage
      if: (!cancelled())
      run: df -hT
 
    - name: Get the latest download url of Phicomm-N1 release
      if: (!cancelled())
      run: |
        curl -s "https://api.github.com/repos/ophub/op/releases" | grep -o "openwrt_.*/openwrt_phicomm_.*\.zip" | head -n 1 > DOWNLOAD_URL
        [ -s DOWNLOAD_URL ] && echo "DOWNLOAD_URL=https://github.com/ophub/op/releases/download/$(cat DOWNLOAD_URL)" >> $GITHUB_ENV
 
    - name: Download firmware
      id: download
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        wget -q -P ${{ env.OPENWRT_PATH }}/flippy ${{ env.DOWNLOAD_URL }}
        cd ${{ env.OPENWRT_PATH }}/flippy && unzip *.zip
        echo "USE_KERNEL=$( ls -d */ | head -n 1  | head -c-2 )" >> $GITHUB_ENV
        echo "FILE_DATE=$(date +"%Y.%m.%d")" >> $GITHUB_ENV
        cd $( ls -d */ | head -n 1 ) && gzip -d *.img.gz && mv *.img ../phicomm.img && cd ../
        rm -rf $( find ${PWD}/* -type d )
        rm -rf $( find ${PWD}/* -type f ! -name "*.img" )
        [ -f *.img ] && echo $(ls *.img) file exist || echo *.img file does not exist
        echo "::set-output name=status::success"

    - name: Build firmware
      id: build
      if: steps.download.outputs.status == 'success' && env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cd ${{ env.OPENWRT_PATH }}
        chmod +x make_s905x3_hk1.sh
        sudo ./make_s905x3_hk1.sh all
        cd out/
        [ $( ls -l | grep "^-" | wc -l ) -gt 1 ] && echo "OP_TAG=s905x3_hk1" >> $GITHUB_ENV || echo "OP_TAG=$(ls *.img | sed -e 's/.img//g')" >> $GITHUB_ENV
        zip -r openwrt_${{ env.FILE_DATE }}.zip *.img
        echo "FILEPATH=$PWD/$(ls *.zip).zip" >> $GITHUB_ENV
        echo "::set-output name=status::success"

    - name: Upload firmware to Actions
      uses: actions/upload-artifact@master
      if: steps.build.outputs.status == 'success' && env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      with:
        name: openwrt_${{ env.USE_KERNEL }}_${{ env.OP_TAG }}_${{ env.FILE_DATE }}
        path: ${{ env.FILEPATH }}

    - name: Upload firmware to cowtransfer
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_COWTRANSFER == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer cow --block 2621440 -s -p 64 --no-progress ${{ env.FILEPATH }} 2>&1 | tee cowtransfer.log
        [ -s cowtransfer.log ] && echo "COW_PATH=$(cat cowtransfer.log)" >> $GITHUB_ENV

    - name: Upload firmware to WeTransfer
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_WETRANSFER == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer wet -s -p 16 --no-progress ${{ env.FILEPATH }} 2>&1 | tee wetransfer.log
        [ -s wetransfer.log ] && echo "WET_PATH=$(cat wetransfer.log)" >> $GITHUB_ENV

    - name: Upload firmware to release
      uses: svenstaro/upload-release-action@v2
      if: steps.build.outputs.status == 'success' && env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: ${{ steps.build.outputs.firmware }}
        tag: openwrt_${{ env.OP_TAG }}_${{ env.FILE_DATE }}
        overwrite: true
        file_glob: true
        body: |
          This is OpenWrt firmware for ${{ env.OP_TAG }}
          * Firmware information
          Default IP: 192.168.1.1
          Default username: root
          Default password: password
          Default WIFI name: OpenWrt
          Default WIFI password: none
          [WETRANSFER](${{ env.WET_PATH }})
     
