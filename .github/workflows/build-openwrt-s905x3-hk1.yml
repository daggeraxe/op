#============================================================================================================================
# https://github.com/ophub/op
# Description: Automatically Build OpenWrt for s905x3
# Function: Workflows for Build s905x3
# Cron: min (0 - 59) / hour (0 - 23) / day of month (1 - 31) / month (1 - 12) / day of week (0 - 6)(Sunday - Saturday)
# ${{ env.MAKE_FIRMWARE }}: all s905x3 hk1
#============================================================================================================================

name: Build OpenWrt for s905x3

on:
  repository_dispatch:
  release:
    types: published
  push:
    branches:
      - main
    paths:
      - '.github/workflows/build-openwrt-s905x3-hk1.yml'
      - 'router/phicomm_n1/build_kernel/make_s905x3_hk1.sh'
  #schedule:
    #- cron: '0 0 * * 5'
  #watch:
    #types: started

env:
  OPENWRT_PATH: router/phicomm_n1/build_kernel
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  UPLOAD_WETRANSFER: true
  TZ: Asia/Shanghai
  RELEASE_DATE: '2020.10.08'
  USE_KERNEL: '5.4.69'

jobs:
  build:
    runs-on: ubuntu-18.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Check space usage
      if: (!cancelled())
      run: df -hT
      
    - name: download firmware from Phicomm N1 releases
      id: download
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        wget -q -P ${{ env.OPENWRT_PATH }}/flippy https://github.com/ophub/op/releases/download/openwrt_phicomm_n1_${{ env.RELEASE_DATE }}/openwrt_phicomm_n1_${{ env.RELEASE_DATE }}.zip
        cd ${{ env.OPENWRT_PATH }}/flippy && unzip *.zip
        cd ${{ env.USE_KERNEL }} && gzip -d *.img.gz && mv *.img ../phicomm.img && cd ../
        rm -rf $( find ${PWD}/* -type d )
        rm -rf $( find ${PWD}/* -type f ! -name "*.img" )
        [ -f *.img ] && echo $(ls *.img) file exist || echo *.img file does not exist
        echo "::set-output name=status::success"

    - name: Build firmware
      id: build
      if: steps.download.outputs.status == 'success' && env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cd ${{ env.OPENWRT_PATH }}
        chmod +x make_s905x3_hk1.sh
        sudo ./make_s905x3_hk1.sh all
        cd out/
        [ $( ls -l | grep "^-" | wc -l ) -gt 1 ] && echo "OP_TAG=s905x3_hk1" >> $GITHUB_ENV || echo "OP_TAG=$(ls *.img | sed -e 's/.img//g')" >> $GITHUB_ENV
        zip -r openwrt_${{ env.OP_TAG }}_$(date +"%Y.%m.%d").zip *
        echo "::set-output name=firmware::$PWD/$(ls *.zip)"
        echo "::set-output name=status::success"

    - name: Upload firmware to Actions
      uses: actions/upload-artifact@master
      if: steps.build.outputs.status == 'success' && env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      with:
        name: openWrt_${{ env.OP_TAG }}_$(date +"%Y.%m.%d")
        path: ${{ steps.build.outputs.firmware }}

    - name: Upload firmware to WeTransfer
      if: steps.build.outputs.status == 'success' && env.UPLOAD_WETRANSFER == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer wet -s -p 16 --no-progress ${{ steps.build.outputs.firmware }} 2>&1 | tee wetransfer.log
        echo "::warning file=wetransfer.com::$(cat wetransfer.log | grep https)"

    - name: Upload firmware to release
      uses: svenstaro/upload-release-action@v2
      if: steps.build.outputs.status == 'success' && env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: ${{ steps.build.outputs.firmware }}
        tag: openWrt_${{ env.OP_TAG }}_$(date +"%Y.%m.%d")
        overwrite: true
        file_glob: true
        body: |
          This is OpenWrt firmware for ${{ env.OP_TAG }}
          * Firmware information
          Default IP: 192.168.1.1
          Default username: root
          Default password: password
          Default WIFI name: OpenWrt
          Default WIFI password: none
     
