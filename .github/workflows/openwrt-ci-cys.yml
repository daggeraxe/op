#
# This is free software, lisence use MIT.
#
# Copyright (C) 2019 P3TERX <https://p3terx.com>
# Copyright (C) 2019 KFERMercer <KFER.Mercer@gmail.com>
#
# <https://github.com/KFERMercer/OpenWrt-CI>
#

name: Build linksys_wrt1900acs_v2-OpenWrt

on:
  repository_dispatch:
  release:
    types: published
  push:
    branches:
      - master
    paths:
      - 'router/linksys_wrt1900acs_v2/.config'
    schedule:
      - cron: 0 4 * * 5
#  watch:
#    types: started

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: router/linksys_wrt1900acs_v2/.config
  DIY_P1_SH: router/linksys_wrt1900acs_v2/diy-part1.sh
  DIY_P2_SH: router/linksys_wrt1900acs_v2/diy-part2.sh
  SSH_ACTIONS: false
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_COWTRANSFER: false
  UPLOAD_WETRANSFER: false
  TZ: Asia/Shanghai


jobs:

  build_openwrt:

    name: Build OpenWrt
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id

    steps:

      - name: Checkout
        uses: actions/checkout@master
        with:
          ref: master

      - name: Space cleanup
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          sudo mkdir -p /workdir
          sudo chown $USER:$GROUPS /workdir

      - name: Clone source code
        working-directory: /workdir
        run: |
          df -hT $PWD
          git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
          ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

      - name: Load custom feeds
        run: |
          [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
          chmod +x $DIY_P1_SH
          cd openwrt
          $GITHUB_WORKSPACE/$DIY_P1_SH

          df -h

      - name: Update feeds
        run: |
          cd openwrt
          ./scripts/feeds update -a
          ./scripts/feeds install -a
          
      - name: Load custom configuration
        run: |
          [ -e files ] && mv files openwrt/files
          [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
          chmod +x $DIY_P2_SH
          cd openwrt
          $GITHUB_WORKSPACE/$DIY_P2_SH

      - name: SSH connection to Actions
        uses: P3TERX/debugger-action@master
        if: env.SSH_ACTIONS == 'true' || contains(github.event.action, 'ssh')

      - name: Make download
        run: |
          cd openwrt
          make defconfig
          make download -j8 || make download -j8 V=s
          find ./dl/ -size -1024c -exec ls -l {} \;
          find ./dl/ -size -1024c -exec rm -f {} \;
          df -h

      - name: Compile firmware
        run: |
          cd openwrt
          make -j$(nproc) || make -j8 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h ./ --max-depth=1
          du -h /mnt/openwrt/ --max-depth=1 || true

      - name: Prepare artifact
        run: find ./openwrt/bin/targets/ -type d -name "packages" | xargs rm -rf {}

      - name: Upload config.seed
        uses: actions/upload-artifact@master
        with:
          name: config.seed
          path: ./openwrt/bin/targets/*/*/config.seed

      - name: Upload firmware
        uses: actions/upload-artifact@master
        with:
          name: OpenWrt_firmware
          path: ./openwrt/bin/targets/
