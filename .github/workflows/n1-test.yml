#==================================================
# https://github.com/ophub/op
# Description: Automatically Build OpenWrt for Phicomm N1
# Function: Workflows for Build Phicomm N1
# Cron: min (0 - 59) / hour (0 - 23) / day of month (1 - 31) / month (1 - 12) / day of week (0 - 6)(Sunday - Saturday)
#==================================================

name: Build OpenWrt for Phicomm N1

on:
  repository_dispatch:
  release:
    types: published
  push:
    branches:
      - master
    paths:
      - '.github/workflows/n1-test.yml'
  # schedule:
    # - cron: '0 0 * * 5'
  # watch:
    # types: started

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: router/phicomm_n1/.config
  DIY_P1_SH: router/phicomm_n1/diy-part1.sh
  DIY_P2_SH: router/phicomm_n1/diy-part2.sh
  TMP_PATH: router/phicomm_n1/tmp
  OUT_PATH: router/phicomm_n1/out
  OPENWRT_ORGANIZE_PATH: router/phicomm_n1/openwrt
  OPENWRT_ORGANIZE_FILES: https://we.tl/t-f1hsz0oTsr
  MAKE_FILE: router/phicomm_n1/make
  SSH_ACTIONS: false
  UPLOAD_BIN_DIR: false
  UPLOAD_ORIGINALFIRMWARE: true
  UPLOAD_N1FIRMWARE: true
  UPLOAD_COWTRANSFER: false
  UPLOAD_WETRANSFER: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-18.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-1804)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
        
    - name: Clone source code
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: Check space usage
      if: (!cancelled())
      run: df -hT

    - name: Build firmware for N1
      id: buildn1firmware
      if: env.UPLOAD_N1FIRMWARE == 'true' && !cancelled()
      run: |
        chmod +x $MAKE_FILE
        sudo rm -rf $OUT_PATH
        mkdir -p $OPENWRT_ORGANIZE_PATH && cd $OPENWRT_ORGANIZE_PATH
        pip install requests
        git clone https://github.com/predat/wetransferpy.git $OPENWRT_ORGANIZE_PATH
        cd $OPENWRT_ORGANIZE_PATH/wetransferpy
        sudo wetranfer-download -u $OPENWRT_ORGANIZE_FILES
        # curl -fsSL git.io/file-transfer | sh
        # ./transfer --no-progress ${OPENWRT_ORGANIZE_FILES} 2>&1
        for x in $(ls .); do
          echo -e " [ \033[1;32m$x\033[0m ] "
          cd $x && cp *.tar.gz $OPENWRT_ORGANIZE_PATH
          cd ../
        done
        

        # mkdir -p temp
        # unzip -o *.zip -d $OPENWRT_ORGANIZE_PATH/temp/ 
        # cd $OPENWRT_ORGANIZE_PATH/temp/ && cp *.tar.gz $OPENWRT_ORGANIZE_PATH
      
        sudo $MAKE_FILE -d
          
        i=0
        cd $OUT_PATH
        for x in $(ls .); do
          cd $x
          filename=$(ls .)
          filename=${filename%.*}
          gzip *.img
          echo "::set-env name=UploadFirmwareFolder_$((++i))::$PWD"
          echo "::set-env name=firmware_$i::$filename"
          cd ../
        done
        echo "::set-output name=status::success"
        
    - name: Upload firmware directory
      uses: actions/upload-artifact@master
      if: steps.buildn1firmware.outputs.status == 'success' && env.UPLOAD_N1FIRMWARE == 'true' && !cancelled()
      with:
        name: ${{ env.firmware_1 }}
        path: ${{ env.UploadFirmwareFolder_1 }}
        
    - name: Upload firmware to WeTransfer
      if: steps.buildn1firmware.outputs.status == 'success' && env.UPLOAD_N1FIRMWARE == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer wet -s -p 16 --no-progress ${UploadFirmwareFolder_1} 2>&1 | tee wetransfer.log
        echo "::warning file=wetransfer.com::$(cat wetransfer.log | grep https)"

