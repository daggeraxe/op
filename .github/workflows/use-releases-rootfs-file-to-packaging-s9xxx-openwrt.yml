#========================================================================================================================
# https://github.com/ophub/op
# Description: Automatically Build OpenWrt for All S9xxx-Boxs
# Function: Workflows for Build All S9xxx-Boxs
# Cron: min (0 - 59) / hour (0 - 23) / day of month (1 - 31) / month (1 - 12) / day of week (0 - 6)(Sunday - Saturday)
#========================================================================================================================

name: Use Releases rootfs file to Packaging S9xxx

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
  #schedule:
    #- cron: '0 22 * * *'

env:
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  UPLOAD_WETRANSFER: false
  RECENT_LASTEST: 3
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-18.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-1804)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: Build OpenWrt for S9xxx-Boxs
      id: build
      if: (!cancelled())
      run: |
        git clone --depth 1 https://github.com/ophub/amlogic-s9xxx-openwrt.git
        cd amlogic-s9xxx-openwrt/
        mkdir -p openwrt-armvirt
        curl -s "https://api.github.com/repos/${GITHUB_REPOSITORY}/releases" | grep -o "openwrt_s9xxx_.*/openwrt-armvirt-.*\.tar.gz" | head -n 1 > DOWNLOAD_URL
        [ -s DOWNLOAD_URL ] && wget -q -P openwrt-armvirt https://github.com/${GITHUB_REPOSITORY}/releases/download/$(cat DOWNLOAD_URL)
        sudo chmod +x make
        sudo ./make -d -b s9xxx_n1_x96_hk1_h96_octopus_belink_belinkpro_ugoos -k 5.9.16_5.4.93
        cd out/ && sudo gzip *.img
        cp -f ../openwrt-armvirt/*.tar.gz . && sync
        echo "FILEPATH=$PWD" >> $GITHUB_ENV
        echo "FILE_DATE=$(date +"%Y.%m.%d.%H%M")" >> $GITHUB_ENV
        echo "::set-output name=status::success"
        
    - name: SSH connection to Actions @ Ctrl+C to enter, Ctrl+D to exit
      uses: P3TERX/ssh2actions@main
      if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}

    - name: Upload firmware directory for armvirt
      uses: actions/upload-artifact@v2
      if: steps.build.outputs.status == 'success' && env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      with:
        name: openwrt-armvirt-64-default-rootfs_${{ env.FILE_DATE }}
        path: ${{ env.FILEPATH }}/openwrt-armvirt-64-*
        retention-days: ${{ env.RECENT_LASTEST }}
        if-no-files-found: ignore

    - name: Upload firmware directory for Phicomm-N1
      uses: actions/upload-artifact@v2
      if: steps.build.outputs.status == 'success' && env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      with:
        name: openwrt_phicomm-n1_${{ env.FILE_DATE }}
        path: ${{ env.FILEPATH }}/openwrt_n1_*
        retention-days: ${{ env.RECENT_LASTEST }}
        if-no-files-found: ignore

    - name: Upload firmware directory for S9xxx-Boxs
      uses: actions/upload-artifact@v2
      if: steps.build.outputs.status == 'success' && env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      with:
        name: openwrt_s9xxx_${{ env.FILE_DATE }}
        path: ${{ env.FILEPATH }}/openwrt_s9xxx_*
        retention-days: ${{ env.RECENT_LASTEST }}
        if-no-files-found: ignore

    - name: Upload firmware directory for Belink GT-King
      uses: actions/upload-artifact@v2
      if: steps.build.outputs.status == 'success' && env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      with:
        name: openwrt_belink_${{ env.FILE_DATE }}
        path: ${{ env.FILEPATH }}/openwrt_belink_*
        retention-days: ${{ env.RECENT_LASTEST }}
        if-no-files-found: ignore

    - name: Upload firmware directory for Belink GT-King Pro
      uses: actions/upload-artifact@v2
      if: steps.build.outputs.status == 'success' && env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      with:
        name: openwrt_belinkpro_${{ env.FILE_DATE }}
        path: ${{ env.FILEPATH }}/openwrt_belinkpro_*
        retention-days: ${{ env.RECENT_LASTEST }}
        if-no-files-found: ignore

    - name: Upload firmware directory for UGOOS AM6 Plus
      uses: actions/upload-artifact@v2
      if: steps.build.outputs.status == 'success' && env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      with:
        name: openwrt_ugoos_${{ env.FILE_DATE }}
        path: ${{ env.FILEPATH }}/openwrt_ugoos_*
        retention-days: ${{ env.RECENT_LASTEST }}
        if-no-files-found: ignore

    - name: Upload firmware directory for X96-Max+
      uses: actions/upload-artifact@v2
      if: steps.build.outputs.status == 'success' && env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      with:
        name: openwrt_x96-max_${{ env.FILE_DATE }}
        path: ${{ env.FILEPATH }}/openwrt_x96_*
        retention-days: ${{ env.RECENT_LASTEST }}
        if-no-files-found: ignore

    - name: Upload firmware directory for HK1-Box
      uses: actions/upload-artifact@v2
      if: steps.build.outputs.status == 'success' && env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      with:
        name: openwrt_hk1-box_${{ env.FILE_DATE }}
        path: ${{ env.FILEPATH }}/openwrt_hk1_*
        retention-days: ${{ env.RECENT_LASTEST }}
        if-no-files-found: ignore

    - name: Upload firmware directory for H96-Max-X3
      uses: actions/upload-artifact@v2
      if: steps.build.outputs.status == 'success' && env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      with:
        name: openwrt_h96-max-x3_${{ env.FILE_DATE }}
        path: ${{ env.FILEPATH }}/openwrt_h96_*
        retention-days: ${{ env.RECENT_LASTEST }}
        if-no-files-found: ignore

    - name: Upload firmware directory for Octopus-Planet
      uses: actions/upload-artifact@v2
      if: steps.build.outputs.status == 'success' && env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      with:
        name: openwrt_octopus-planet_${{ env.FILE_DATE }}
        path: ${{ env.FILEPATH }}/openwrt_octopus_*
        retention-days: ${{ env.RECENT_LASTEST }}
        if-no-files-found: ignore

    - name: Upload OpenWrt Firmware to WeTransfer
      if: steps.build.outputs.status == 'success' && env.UPLOAD_WETRANSFER == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer wet -s -p 16 --no-progress ${{ env.FILEPATH }}/{openwrt_s9xxx_*,openwrt_n1_*} 2>&1 | tee wetransfer.log
        echo "WET_URL=$(cat wetransfer.log | grep https | cut -f3 -d" ")" >> $GITHUB_ENV

    - name: Upload OpenWrt Firmware to Release
      uses: softprops/action-gh-release@v1
      if: steps.build.outputs.status == 'success' && env.UPLOAD_RELEASE == 'true' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: openwrt_s9xxx_${{ env.FILE_DATE }}
        files: ${{ env.FILEPATH }}/*
        body: |
          This is OpenWrt firmware for S9xxx-Boxs
          * Firmware information
          Default IP: 192.168.1.1
          Default username: root
          Default password: password
          Default WIFI name: OpenWrt
          Default WIFI password: none
          S9xxx-Boxs installation command: s9xxx-install.sh
          Phicomm-N1 installation command: n1-install.sh

