#=======================================================
# https://github.com/ophub/op
# Description: Automatically Build OpenWrt for Phicomm N1
# Function: Workflows for Build Phicomm N1
# Cron: min (0 - 59) / hour (0 - 23) / day of month (1 - 31) / month (1 - 12) / day of week (0 - 6)(Sunday - Saturday)
#=========================================================

name: Build OpenWrt for Phicomm N1

on:
  repository_dispatch:
  release:
    types: published
  push:
    branches:
      - main
    paths:
      - '.github/workflows/test.yml'
  #schedule:
    #- cron: '0 0 * * 5'
  #watch:
    #types: started

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: router/phicomm_n1/.config
  DIY_P1_SH: router/phicomm_n1/diy-part1.sh
  DIY_P2_SH: router/phicomm_n1/diy-part2.sh
  TMP_PATH: router/phicomm_n1/tmp
  OUT_PATH: router/phicomm_n1/out
  OPENWRT_ORGANIZE_PATH: router/phicomm_n1/openwrt
  MAKE_FILE: router/phicomm_n1/make
  SSH_ACTIONS: false
  UPLOAD_BIN_DIR: false
  UPLOAD_ORIGINALFIRMWARE: true
  UPLOAD_N1FIRMWARE: true
  UPLOAD_RELEASE: true
  UPLOAD_COWTRANSFER: false
  UPLOAD_WETRANSFER: true
  TZ: Asia/Shanghai
  MAKE_RELEASE_DATE: '2020.10.08'


jobs:
  build:
    runs-on: ubuntu-18.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Check space usage
      if: (!cancelled())
      run: df -hT

    - name: Test yml
      id: testyml
      if: (!cancelled())
      run: |
        ehco "phicomm" > DEVICE_NAME
        [ -s DEVICE_NAME ] && {
        echo "DEVICE_NAME=$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "OP_TAG=openwrt_$(cat DEVICE_NAME)_$(date +"%Y.%m.%d")" >> $GITHUB_ENV
        echo "FILE_DATE=$(date +"%Y.%m.%d")" >> $GITHUB_ENV
        echo "::set-output name=status::success"
        }

    - name: download firmware for N1
      id: downloadfirmware
      if: env.UPLOAD_N1FIRMWARE == 'true' && !cancelled()
      run: |
        wget -q -P $OPENWRT_ORGANIZE_PATH https://github.com/ophub/op/releases/download/openwrt_phicomm_n1_${{ env.MAKE_RELEASE_DATE }}/openwrt_phicomm_n1_${{ env.MAKE_RELEASE_DATE }}.zip
        cd $OPENWRT_ORGANIZE_PATH && unzip *.zip
        rm -rf $( find ${PWD}/* -type d )
        rm -rf $( find ${PWD}/* -type f -name "*.zip" )
        [ -f *.tar.gz ] && echo $(ls *.tar.gz) file exist || echo *.tar.gz file does not exist
        echo "::set-output name=status::success"

    - name: Build firmware for N1
      id: buildn1firmware
      if: steps.downloadfirmware.outputs.status == 'success' && env.UPLOAD_N1FIRMWARE == 'true' && !cancelled()
      run: |
        chmod +x $MAKE_FILE
        sudo rm -rf $OUT_PATH
        sudo $MAKE_FILE -d
        cd $OUT_PATH
        for x in $(ls .); do
          cd $x && gzip *.img && cd ../
        done
        cp -rf ../openwrt/* .
        zip -r openwrt_phicomm_n1_test_${{ env.MAKE_RELEASE_DATE }}.zip *
        echo "::set-output name=n1testfirmware::$PWD/openwrt_phicomm_n1_test_${{ env.MAKE_RELEASE_DATE }}.zip"
        echo "::set-output name=status::success"

    - name: Upload firmware directory for Phicomm N1
      uses: actions/upload-artifact@master
      if: steps.buildn1firmware.outputs.status == 'success' && env.UPLOAD_N1FIRMWARE == 'true' && !cancelled()
      with:
        name: OpenWrt_Phicomm_N1_test_${{ env.MAKE_RELEASE_DATE }}
        path: ${{ steps.buildn1firmware.outputs.n1testfirmware }}

    - name: Upload firmware to WeTransfer
      if: steps.buildn1firmware.outputs.status == 'success' && env.UPLOAD_N1FIRMWARE == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer wet -s -p 16 --no-progress ${{ steps.buildn1firmware.outputs.n1testfirmware }} 2>&1 | tee wetransfer.log
        echo "::warning file=wetransfer.com::$(cat wetransfer.log | grep https)"

    - name: Upload Phicomm N1 firmware to release
      uses: svenstaro/upload-release-action@v2
      if: steps.buildn1firmware.outputs.status == 'success' && env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: ${{ steps.buildn1firmware.outputs.n1testfirmware }}
        tag: OpenWrt_Phicomm_N1_test_${{ env.MAKE_RELEASE_DATE }}
        overwrite: true
        file_glob: true
        body: |
          This is OpenWrt firmware for Phicomm N1
          * Firmware information
          Default IP: 192.168.1.1
          Default username: root
          Default password: password
          Default WIFI name: OpenWrt
          Default WIFI password: none
     
